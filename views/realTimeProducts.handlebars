<h1>{{title}}</h1>

<!-- Formulario para agregar un producto -->
<form id="add-product-form">
    <label for="title">Título</label>
    <input type="text" id="title" name="title" required>

    <label for="description">Descripción</label>
    <input type="text" id="description" name="description" required>

    <label for="price">Precio</label>
    <input type="number" id="price" name="price" required>

    <button type="submit">Agregar Producto</button>
</form>

<div id="products-container">
    <!-- Los productos se agregarán dinámicamente aquí -->
</div>

<script src="/socket.io/socket.io.js"></script>

<script>
    const socket = io();

    // Manejar la creación de productos
    document.getElementById('add-product-form').addEventListener('submit', function (event) {
        event.preventDefault();

        const newProduct = {
            title: document.getElementById('title').value,
            description: document.getElementById('description').value,
            price: document.getElementById('price').value
        };

        // Enviar el nuevo producto al servidor a través de WebSocket
        socket.emit('addProduct', newProduct);

        // Limpiar el formulario después de enviarlo
        document.getElementById('add-product-form').reset();
    });

    // Cuando recibimos la lista actualizada de productos
    socket.on('updateProducts', (data) => {
        const container = document.getElementById('products-container');
        container.innerHTML = ''; // Limpiar el contenedor antes de agregar los productos

        data.forEach(product => {
            const productElement = document.createElement('div');
            productElement.classList.add('product');
            productElement.innerHTML = `
                <h2>${product.title || product.name}</h2>  <!-- Usamos title o name -->
                <p>Precio: $${product.price}</p>
                <p>Descripción: ${product.description}</p>
                <button onclick="deleteProduct(${product.id})">Eliminar</button>  <!-- Botón para eliminar -->
            `;
            container.appendChild(productElement);
        });
    });

    // Función para eliminar un producto
    function deleteProduct(productId) {
        socket.emit('deleteProduct', productId);  // Emitir el ID del producto a eliminar
    }
</script>
